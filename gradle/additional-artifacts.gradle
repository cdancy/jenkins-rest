shadowJar {
    classifier = 'all'
    mergeServiceFiles()

    def foundGroup = rootProject.findProperty('group')
    def foundName = rootProject.name.replaceAll('-', '.')
    def newBasePackage = "${foundGroup}.${foundName}"

    relocate 'org.aopalliance', "${newBasePackage}.shaded.org.aopalliance"
    relocate 'org.objectweb', "${newBasePackage}.shaded.org.objectweb"
    relocate 'com.google', "${newBasePackage}.shaded.com.google"
    relocate 'net.sf', "${newBasePackage}.shaded.net.sf"
    relocate 'javax.inject', "${newBasePackage}.shaded.javax.inject"
    relocate 'org.jclouds', "${newBasePackage}.shaded.org.jclouds"
    relocate 'javax.inject', "${newBasePackage}.shaded.javax.inject"
    relocate 'javax.annotation', "${newBasePackage}.shaded.javax.annotation"
    relocate 'javax.ws.rs', "${newBasePackage}.shaded.javax.ws.rs"
}

task sourcesJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}

task docsJar(type: Jar, dependsOn: javadoc) {
    classifier 'docs'
    from javadoc.destinationDir
}

task testsJar(type: Jar) {
    classifier = 'tests'
    from sourceSets.test.output
}
