buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.eclipse.jgit:org.eclipse.jgit:5.12.0.202106070339-r"
    }
}

import org.eclipse.jgit.api.Git
import org.eclipse.jgit.api.DeleteTagCommand
import org.eclipse.jgit.api.TagCommand
import org.eclipse.jgit.api.PushCommand
import org.eclipse.jgit.lib.Repository
import org.eclipse.jgit.storage.file.FileRepositoryBuilder
import org.eclipse.jgit.transport.UsernamePasswordCredentialsProvider

File repoDir = new File("${projectDir}")
FileRepositoryBuilder builder = new FileRepositoryBuilder()
Repository repo = builder.findGitDir(repoDir).build()
Git git = new Git(repo)

task createTag {
    description = 'Creates repository tag with current project version.'
    ext.tagName = "v${project.version}"

    doLast {
        logger.quiet "Creating tag '$tagName'."

        // Remove potentially existing tag
        DeleteTagCommand delTag = git.tagDelete()
        delTag.setTags(tagName).call()

        // Create tag
        TagCommand tag = git.tag()
        tag.setName(tagName).setMessage("Version ${project.version}").call()
    }
}

task pushTag {
    description = 'Pushes tag to remote repository.'
    dependsOn createTag

    doLast {
        logger.quiet "Pushing tag '$createTag.tagName' to remote."
        PushCommand push = git.push()
        push.add(createTag.tagName)
        push.setCredentialsProvider(new UsernamePasswordCredentialsProvider(project.githubUsername, project.githubPassword))
        push.call()
    }
}

task tag {
    dependsOn pushTag
}

task release {
    description = 'Publishes artifacts to Bintray and tags repository with current project version.'
    dependsOn assemble, tag
}
