name: Jenkins REST CI Build
run-name: ${{ github.actor }} is running Jenkins REST CI Build on GitHub Actions 🚀
on: [push, pull_request_target]
jobs:
  build:
    # You must use a Linux environment when using service containers or container jobs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [ 11, 17 ]
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.head_ref || github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref || github.ref }}
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ matrix.java-version }}
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - name: Build Jenkins LTS docker images
        run: docker build -t jenkins-rest/jenkins src/main/docker

      - name: Run Jenkins LTS docker images
        run: docker run -d --rm -p 8080:8080 --name jenkins-rest jenkins-rest/jenkins

      - name: Setup Gradle Build Action
        uses: gradle/gradle-build-action@v2.7.0

      - name: Execute Gradle build
        run: ./gradlew clean build mockTest integTest --stacktrace

      - run: echo "🍏 This job's status is ${{ job.status }}."
      - name: Stop docker
        run: docker stop jenkins-rest
